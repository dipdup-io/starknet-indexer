syntax = "proto3";

package proto;

option go_package = "github.com/dipdup-io/starknet-indexer/pkg/grpc/pb";

import "github.com/dipdup-net/indexer-sdk/pkg/modules/grpc/proto/general.proto";
import "github.com/dipdup-io/starknet-indexer/pkg/grpc/proto/entity_filters.proto";
import "github.com/dipdup-io/starknet-indexer/pkg/grpc/proto/response.proto";

/**
* Desription of server interface 
**/
service IndexerService {
    // Subscribe to live notification from indexer
    rpc Subscribe(SubscribeRequest) returns(stream Subscription);
    // Unsubscribe from live notification from indexer
    rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);

    // Receives JSON schema of class ABI by class hash
    rpc JSONSchemaForClass(Bytes) returns(Bytes);
    // Receives JSON schema of class ABI by contract hash
    rpc JSONSchemaForContract(Bytes) returns(Bytes);
    // Receives entity under proxy if it exists
    rpc GetProxy(ProxyRequest) returns(Proxy);
}

/**
* List of requested subscriptions
**/
message SubscribeRequest {
    bool head = 1;    
    repeated InvokeFilters invokes = 2;
    repeated DeclareFilters declares = 3;
    repeated DeployFilters deploys = 4;
    repeated DeployAccountFilters deploy_accounts = 5;
    repeated L1HandlerFilter l1_handlers = 6;
    repeated InternalFilter internals = 7;
    repeated FeeFilter fees = 8;
    repeated EventFilter events = 9;
    repeated MessageFilter msgs = 10;
    repeated TransferFilter transfers = 11;
    repeated StorageDiffFilter storage_diffs = 12;
    repeated TokenBalanceFilter token_balances = 13;
    repeated TokenFilter tokens = 14;
    repeated AddressFilter addresses = 15;
}

/**
* Subscription entity. It contains subscription id and subscription's live notifications. It's response on `Subscribe` request.
**/
message Subscription {
    SubscribeResponse response = 1; // message containing subscription id
    Block block = 2;
    Declare declare = 3;
    Deploy deploy = 4;
    DeployAccount deploy_account = 5;
    Event event = 6;
    Fee fee = 7;
    Internal internal = 8;
    Invoke invoke = 9;
    L1Handler l1_handler = 10;
    StarknetMessage message = 11;
    StorageDiff storage_diff = 12;
    TokenBalance token_balance = 13;
    Transfer transfer = 14;
    Token token = 15;
    Address address = 16;
    EndOfBlock end_of_block = 17; // message which signals about block data ends
}

/**
* Bytes array
**/
message Bytes {
    bytes data = 1; // array
}

/**
* Json schema entity
**/
message JsonSchema {
    repeated JsonSchemaItem functions = 1; // list of functions json schema
    repeated JsonSchemaItem l1_handlers = 2; // list of l1 handlers json schema
    repeated JsonSchemaItem constructors = 3; // // list of constructors json schema
    repeated JsonSchemaItem events = 4; // list of events json schema
    repeated JsonSchemaItem structs = 5; // list of declared structures json schema
}

/**
* Json schema item
**/
message JsonSchemaItem {
    string name = 1; // name of json schema item
    bytes schema = 2; // json schema
}

/**
* Request message for GetProxy method
**/
message ProxyRequest {
    Bytes hash = 1;
    Bytes selector = 2;
}