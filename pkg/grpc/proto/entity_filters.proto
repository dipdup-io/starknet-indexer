syntax = "proto3";

package proto;

option go_package = "github.com/dipdup-io/starknet-indexer/pkg/grpc/pb";

import "github.com/dipdup-io/starknet-indexer/pkg/grpc/proto/filters.proto";

message InvokeFilters {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    EnumFilter status = 3;
    EnumFilter version = 4;
    BytesFilter contract = 5;
    EqualityFilter selector = 6;
    StringFilter entrypoint = 7;
    map<string, string> parsed_calldata = 8;
    IntegerFilter id = 9;
}

message DeclareFilters {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    EnumFilter status = 3;
    EnumFilter version = 4;
    IntegerFilter id = 5;
}

message DeployFilters {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    EnumFilter status = 3;
    BytesFilter class = 4;
    map<string, string> parsed_calldata = 5;
    IntegerFilter id = 6;
}

message DeployAccountFilters {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    EnumFilter status = 3;
    BytesFilter class = 4;
    map<string, string> parsed_calldata = 5;
    IntegerFilter id = 6;
}

message L1HandlerFilter {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    EnumFilter status = 3;
    BytesFilter contract = 4;
    EqualityFilter selector = 5;
    StringFilter entrypoint = 6;
    map<string, string> parsed_calldata = 7;
    IntegerFilter id = 8;
}

message InternalFilter {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    EnumFilter status = 3;
    BytesFilter contract = 4;
    BytesFilter caller = 5;
    BytesFilter class = 6;
    EqualityFilter selector = 7;
    StringFilter entrypoint = 8;
    EnumFilter entrypoint_type = 9;
    EnumFilter call_type = 10;
    map<string, string> parsed_calldata = 11;
    IntegerFilter id = 12;
}

message FeeFilter {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    EnumFilter status = 3;
    BytesFilter contract = 4;
    BytesFilter caller = 5;
    BytesFilter class = 6;
    EqualityFilter selector = 7;
    StringFilter entrypoint = 8;
    EnumFilter entrypoint_type = 9;
    EnumFilter call_type = 10;
    map<string, string> parsed_calldata = 11;
    IntegerFilter id = 12;
}

message EventFilter {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    BytesFilter contract = 3;
    BytesFilter from = 4;
    StringFilter name = 5;
    map<string, string> parsed_data = 6;
    IntegerFilter id = 7;
}


message MessageFilter {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    BytesFilter contract = 3;
    BytesFilter from = 4;
    BytesFilter to = 5;
    EqualityFilter selector = 6;
    IntegerFilter id = 7;
}

message TransferFilter {
    IntegerFilter height = 1;
    TimeFilter time = 2;
    BytesFilter contract = 3;
    BytesFilter from = 4;
    BytesFilter to = 5;
    StringFilter token_id = 6;
    IntegerFilter id = 7;
}

message StorageDiffFilter {
    IntegerFilter height = 1;
    BytesFilter contract = 2;
    EqualityFilter key = 3;
    IntegerFilter id = 4;
}

message TokenBalanceFilter {
    BytesFilter owner = 1;
    BytesFilter contract = 2;
    StringFilter token_id = 3;
}

message TokenFilter {
    BytesFilter contract = 1;
    StringFilter token_id = 2;
    EnumStringFilter type = 3;
    IntegerFilter id = 4;
}

message AddressFilter {
    IntegerFilter id = 1;
    bool only_starknet = 2;
    IntegerFilter height = 3;
}
